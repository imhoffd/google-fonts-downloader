import fs from 'node:fs/promises'
import path from 'node:path'

import pkg from '../package.json'

import type Font from './Font'
import isNonNull from './isNonNull'
import type { Options } from './program'

export default async function writeCSS(
  fonts: Font[],
  options: Options,
): Promise<void> {
  const css =
    `/* generated by ${pkg.name}@${pkg.version} */\n` +
    fonts
      .flatMap(font => font.srcurls.map(srcurl => [font, srcurl] as const))
      .map(
        ([
          {
            family,
            style,
            display,
            weight,
            unicodeRange,
            unicodeRangeDescription,
          },
          { filename },
        ]) =>
          [
            `/* ${unicodeRangeDescription} */`,
            `@font-face {`,
            `  font-family: '${family}';`,
            `  font-style: ${style};`,
            `  font-weight: ${weight};`,
            display ? `  font-display: ${display};` : null,
            `  src: url('${options.urlPrefix ?? ''}${filename}');`,
            `  unicode-range: ${unicodeRange};`,
            `}`,
          ]
            .filter(isNonNull)
            .join('\n'),
      )
      .join('\n') +
    '\n'

  const filePath = path.join(options.outputDir, 'fonts.css')
  await fs.writeFile(filePath, css, 'utf8')
  console.log(`wrote '${filePath}'`)
}
